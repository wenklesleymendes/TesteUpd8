@model Domino.Entities.Cliente

@{
    ViewData["Title"] = "Cadastro de Cliente";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card p-4">
                <div class="card-header text-center">
                    <div class="d-flex justify-content-center align-items-center">
                        <img src="~/images/logo.png" alt="Upd8 Logo" style="height: 50px; margin-right: 10px;">
                        <h3 class="card-title mb-0" style="color: #258cfb;">Cadastro Cliente</h3>
                    </div>
                </div>
                <div class="card-body">
                    <form id="clienteForm" asp-action="Cadastro" method="post">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="Cpf" class="form-label">CPF:</label>
                                <input type="text" class="form-control" id="Cpf" name="Cpf" value="@Model.Cpf" required />
                            </div>
                            <div class="col-md-6">
                                <label for="Nome" class="form-label">Nome:</label>
                                <input type="text" class="form-control" id="Nome" name="Nome" value="@Model.Nome" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="DataNascimento" class="form-label">Data Nascimento:</label>
                                <input type="date" class="form-control" id="DataNascimento" name="DataNascimento" value="@Model.DataNascimento.ToString("yyyy-MM-dd")" required />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label d-block">Sexo:</label>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" id="Masculino" name="Sexo" value="Masculino" @(Model.Sexo == "Masculino" ? "checked" : "") required />
                                    <label class="form-check-label" for="Masculino">Masculino</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" id="Feminino" name="Sexo" value="Feminino" @(Model.Sexo == "Feminino" ? "checked" : "") required />
                                    <label class="form-check-label" for="Feminino">Feminino</label>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-12">
                                <label for="Endereco" class="form-label">Endereço:</label>
                                <input type="text" class="form-control" id="Endereco" name="Endereco" value="@Model.Endereco" required />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="Estado" class="form-label">Estado:</label>
                                <select class="form-control" id="Estado" name="Estado" required>
                                    <option value="">Selecione</option>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="Cidade" class="form-label">Cidade:</label>
                                <select class="form-control" id="Cidade" name="Cidade" required>
                                    <option value="">Selecione</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-12 text-center">
                                <button type="submit" class="btn btn-primary mr-2">Salvar</button>
                                <button type="reset" class="btn btn-secondary ml-2" id="resetBtn">Limpar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.19.2/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.19.2/additional-methods.min.js"></script>
    <script>
        $(document).ready(function () {
            // Apply CPF mask
            $('#Cpf').mask('000.000.000-00', { reverse: true });

            // Set current date for DataNascimento if it's not already set
            function setTodayDate() {
                var today = new Date().toISOString().split('T')[0];
                $('#DataNascimento').val(today);
            }

            var dataNascimento = $('#DataNascimento').val();
            if (!dataNascimento || dataNascimento === "0001-01-01") {
                setTodayDate();
            }

            // Fetch estados from IBGE API
            $.ajax({
                url: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados',
                method: 'GET',
                success: function (data) {
                    var estadoSelect = $('#Estado');
                    data.sort(function (a, b) {
                        return a.nome.localeCompare(b.nome);
                    });
                    data.forEach(function (estado) {
                        estadoSelect.append(new Option(estado.nome, estado.id));
                    });
                }
            });

            // Fetch cidades based on selected estado
            $('#Estado').change(function () {
                var estadoId = $(this).val();
                if (estadoId) {
                    $.ajax({
                        url: 'https://servicodados.ibge.gov.br/api/v1/localidades/estados/' + estadoId + '/municipios',
                        method: 'GET',
                        success: function (data) {
                            var cidadeSelect = $('#Cidade');
                            cidadeSelect.empty();
                            cidadeSelect.append(new Option('Selecione', ''));
                            data.sort(function (a, b) {
                                return a.nome.localeCompare(b.nome);
                            });
                            data.forEach(function (cidade) {
                                cidadeSelect.append(new Option(cidade.nome, cidade.id));
                            });
                        }
                    });
                } else {
                    $('#Cidade').empty();
                    $('#Cidade').append(new Option('Selecione', ''));
                }
            });

            // Reset DataNascimento to today's date on form reset
            $('#resetBtn').click(function () {
                setTimeout(setTodayDate, 0);
            });

            // Validate form
            $("#clienteForm").validate({
                errorClass: "is-invalid",
                validClass: "is-valid",
                errorPlacement: function (error, element) {
                    if (element.attr("name") == "Sexo") {
                        error.insertAfter(element.closest(".form-check-inline").last());
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                    Cpf: {
                        required: true,
                        cpfBR: true // Custom method to validate CPF format (requires additional-methods.js)
                    },
                    Nome: "required",
                    DataNascimento: "required",
                    Sexo: "required",
                    Endereco: "required",
                    Estado: "required",
                    Cidade: "required"
                },
                messages: {
                    Cpf: {
                        required: "Por favor, insira o CPF",
                        cpfBR: "Por favor, insira um CPF válido"
                    },
                    Nome: "Por favor, insira o nome",
                    DataNascimento: "Por favor, insira a data de nascimento",
                    Sexo: "Por favor, selecione o sexo",
                    Endereco: "Por favor, insira o endereço",
                    Estado: "Por favor, selecione o estado",
                    Cidade: "Por favor, selecione a cidade"
                }
            });

            // Custom method to validate Brazilian CPF
            $.validator.addMethod("cpfBR", function (value, element) {
                value = value.replace(/[^\d]+/g, '');
                if (value.length !== 11) {
                    return false;
                }
                var sum = 0,
                    remainder;
                for (var i = 1; i <= 9; i++) {
                    sum = sum + parseInt(value.substring(i - 1, i)) * (11 - i);
                }
                remainder = (sum * 10) % 11;
                if ((remainder === 10) || (remainder === 11)) {
                    remainder = 0;
                }
                if (remainder !== parseInt(value.substring(9, 10))) {
                    return false;
                }
                sum = 0;
                for (i = 1; i <= 10; i++) {
                    sum = sum + parseInt(value.substring(i - 1, i)) * (12 - i);
                }
                remainder = (sum * 10) % 11;
                if ((remainder === 10) || (remainder === 11)) {
                    remainder = 0;
                }
                return remainder === parseInt(value.substring(10, 11));
            }, "Por favor, insira um CPF válido.");
        });
    </script>
}
